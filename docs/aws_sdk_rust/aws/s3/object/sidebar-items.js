initSidebarItems({"fn":[["multipart_upload_finish_xml","Writes out XML with all the parts in it for S3 to complete."]],"struct":[["AbortMultipartUploadOutput",""],["AbortMultipartUploadRequest",""],["CompleteMultipartUploadOutput",""],["CompleteMultipartUploadOutputParser","Parse `CompleteMultipartUploadOutput` from XML"],["CompleteMultipartUploadOutputWriter","Write `CompleteMultipartUploadOutput` contents to a `SignedRequest`"],["CompleteMultipartUploadRequest","NB: CompleteMultipartUploadRequest is *not* JSON decodable without implementing a custom to_json trait because of Option<&'a [u8]>."],["CopyObjectOutput",""],["CopyObjectRequest",""],["CopyObjectResult",""],["CreateMultipartUploadOutput",""],["CreateMultipartUploadRequest",""],["Delete",""],["DeleteMarkerEntry",""],["DeleteObjectOutput",""],["DeleteObjectRequest",""],["DeleteObjectsOutput",""],["DeleteObjectsRequest",""],["DeletedObject",""],["ErrorDocument",""],["ExpiresParser","Parse `Expires` from XML"],["ExpiresWriter","Write `Expires` contents to a `SignedRequest`"],["GetObjectOutput",""],["GetObjectRequest",""],["GetObjectRequestParser","Parse `GetObjectRequest` from XML"],["GetObjectRequestWriter","Write `GetObjectRequest` contents to a `SignedRequest`"],["GetObjectTorrentRequest",""],["HeadObjectOutput",""],["IndexDocument",""],["Initiator",""],["LambdaFunctionConfiguration","Container for specifying the AWS Lambda notification configuration."],["ListMultipartUploadsOutput",""],["ListMultipartUploadsOutputParser","Parse `ListMultipartUploadsOutput` from XML"],["ListMultipartUploadsOutputWriter","Write `ListMultipartUploadsOutput` contents to a `SignedRequest`"],["ListMultipartUploadsRequest",""],["ListObjectVersionsOutput",""],["ListObjectVersionsRequest",""],["ListObjectsOutput","ListObjectsOutput contains the list of objects and their associated metadata for a given bucket name. There are two versions, version 1 and version 2. AWS S3 supports both. The struct field names that are unique for Version 1 are marked and those that are unique for Version 2 are marked. Those not marked are common between versions. The default for AWS is version 2 but you have to specify version 2 in ListObjectsRequest or it will default to version 1."],["ListObjectsOutputParser","Parse `ListObjectsOutput` from XML"],["ListObjectsOutputWriter","Write `ListObjectsOutput` contents to a `SignedRequest`"],["ListObjectsRequest",""],["ListPartsOutput",""],["ListPartsOutputParser","Parse `ListPartsOutput` from XML"],["ListPartsOutputWriter","Write `ListPartsOutput` contents to a `SignedRequest`"],["ListPartsRequest",""],["ListVersionsResult",""],["MaxUploadsParser","Parse `MaxUploads` from XML"],["MaxUploadsWriter","Write `MaxUploads` contents to a `SignedRequest`"],["MultipartUpload",""],["MultipartUploadListParser","Parse `MultipartUploadList` from XML"],["MultipartUploadListWriter","Write `MultipartUploadList` contents to a `SignedRequest`"],["MultipartUploadParser","Parse `MultipartUpload` from XML"],["MultipartUploadWriter","Write `MultipartUpload` contents to a `SignedRequest`"],["NextUploadIdMarkerParser","Parse `NextUploadIdMarker` from XML"],["NextUploadIdMarkerWriter","Write `NextUploadIdMarker` contents to a `SignedRequest`"],["NoncurrentVersionExpiration","Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object's lifetime."],["ObjectIdentifier",""],["ObjectMetadata","`ObjectMetadata` used for `Contents` for ListObjectsOutput"],["ObjectMetadataListParser","Parse `ObjectMetadataList` from XML"],["ObjectMetadataListWriter","Write `ObjectMetadataList` contents to a `SignedRequest`"],["ObjectMetadataParser","Parse `ObjectMetadata` from XML"],["ObjectMetadataWriter","Write `ObjectMetadata` contents to a `SignedRequest`"],["Part",""],["PartNumberParser","Parse `PartNumber` from XML"],["PartNumberWriter","Write `PartNumber` contents to a `SignedRequest`"],["PartParser","Parse `Part` from XML"],["PartWriter","Write `Part` contents to a `SignedRequest`"],["PutObjectOutput",""],["PutObjectOutputParser","Parse `PutObjectOutput` from XML"],["PutObjectOutputWriter","Write `PutObjectOutput` contents to a `SignedRequest`"],["PutObjectRequest","NB: PutObjectRequest is *not* JSON decodable without implementing a custom to_json trait because of Option<&'a [u8]>."],["QueueConfiguration","Container for specifying an configuration when you want Amazon S3 to publish events to an Amazon Simple Queue Service (Amazon SQS) queue."],["Redirect",""],["RedirectAllRequestsTo",""],["ReplicationRule",""],["RestoreObjectOutput",""],["RestoreObjectRequest",""],["RestoreRequest",""],["Tag",""],["TagParser","Parse `Tag` from XML"],["TagSetParser","Parse `TagSet` from XML"],["TagSetWriter","Write `TagSet` contents to a `SignedRequest`"],["TagWriter","Write `Tag` contents to a `SignedRequest`"],["TopicConfiguration","Container for specifying the configuration when you want Amazon S3 to publish events to an Amazon Simple Notification Service (Amazon SNS) topic."],["UploadIdMarkerParser","Parse `UploadIdMarker` from XML"],["UploadIdMarkerWriter","Write `UploadIdMarker` contents to a `SignedRequest`"],["UploadPartRequest","NB: UploadPartRequest is *not* JSON decodable without implementing a custom to_json trait because of Option<&'a [u8]>."]],"type":[["Expires",""],["MaxParts",""],["MaxUploads",""],["MultipartUploadList",""],["NextPartNumberMarker",""],["NextUploadIdMarker",""],["ObjectMetadataList",""],["ObjectVersionList",""],["PartNumber",""],["PartNumberMarker",""],["Parts",""],["TagSet",""],["UploadIdMarker",""]]});